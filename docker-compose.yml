services:
  postgresql-db:
    container_name: postgresql_db
    image: postgres
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - postgres_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 10
    stop_grace_period: 2m

  rabbitmq-message-broker:
    container_name: rabbitmq_message_broker
    image: rabbitmq:3.9.29-management-alpine
    restart: always
    env_file:
      - .env
    ports:
      - "5672:5672"
      - "15672:15672" # for management
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/mnesia
    networks:
      - rabbitmq_network
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status"]
      interval: 10s
      timeout: 10s
      retries: 10


  telegram-bot:
    container_name: telegram_bot
    restart: always
    env_file:
      - .env
    environment:
      - SQL_DB_ENGINE=postgresql
    build:
      dockerfile: Dockerfile
    networks:
      - postgres_network
    depends_on:
      postgresql-db:
        condition: service_healthy
    stop_grace_period: 2m

volumes:
  postgres_data:
  rabbitmq_data:

networks:
  postgres_network:
  rabbitmq_network:
